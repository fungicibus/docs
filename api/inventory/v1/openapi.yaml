openapi: 3.0.0
info:
  title: Fungicibus Inventory Service API
  description: API for managing products supplies
  version: 1.0.0

servers:
  - url: /api/v1

components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - id
        - status
        - detail
        - meta
      properties:
        id:
          type: string
          description: Id of a request
        status:
          type: string
          description: The HTTP status code applicable to this problem, expressed as a string value
          example: "400"
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        meta:
          $ref: "#/components/schemas/ErrorMeta"
    ErrorMeta:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp of the occurrence of the problem in RFC3339 format
          example: "2006-01-02T15:04:05Z07:00"

    ResourceType:
      type: string
      enum:
        - commodities
      description: "Available JSON:API resource types"

    GetCommoditiesResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/GetCommoditiesResponseDataItem"
    GetCommoditiesResponseDataItem:
      type: object
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
          description: Identifier of a commodity
        type:
          $ref: "#/components/schemas/ResourceType"
        attributes:
          $ref: "#/components/schemas/CommoditiesItem"
    CommoditiesItem:
      type: object
      required:
        - id
        - name
        - sku
        - description
        - category
        - quantity
        - packageForm
        - price
      properties:
        id:
          type: string
        name:
          type: string
        sku:
          type: string
          description: Stock keeping unit is the unit of measure in which the stocks of a material are managed
        description:
          type: string
        category:
          $ref: "#/components/schemas/CategoryType"
        quantity:
          type: integer
          description: Count of packages
          example: 10
        packageForm:
          type: string
          example: "5 dried pieces"
        price:
          type: number
          format: float
          example: 12.99
    CategoryType:
      type: string
      enum: [culinary, medicinal, exotic]

    AddCommodityQuantityRequest:
      type: object
      properties:
        amount:
          type: integer

paths:
  /commodities:
    get:
      summary: Get list of all commodities
      operationId: getCommodities
      parameters:
        - name: filter[commodity.name]
          in: query
          required: false
          schema:
            type: string
          description: Filter commodities by name (partial match)
      responses:
        "200":
          description: List of all commodities
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCommoditiesResponse"
        "400":
          description: Request error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /commodities/{commodityID}/quantity/add:
    post:
      summary: Add to commodity quantity
      operationId: addCommodityQuantity
      description: Adds (or subtracts) a specified amount to the existing quantity of a commodity
      parameters:
        - name: commodityID
          in: path
          required: true
          schema:
            type: string
          description: Identifier of the commodity to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddCommodityQuantityRequest"
      responses:
        "400":
          description: Request error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
